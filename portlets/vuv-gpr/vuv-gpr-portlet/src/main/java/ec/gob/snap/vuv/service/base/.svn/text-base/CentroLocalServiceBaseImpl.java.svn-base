package ec.gob.snap.vuv.service.base;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.bean.IdentifiableBean;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.dao.orm.DynamicQuery;
import com.liferay.portal.kernel.dao.orm.DynamicQueryFactoryUtil;
import com.liferay.portal.kernel.dao.orm.Projection;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.search.Indexable;
import com.liferay.portal.kernel.search.IndexableType;
import com.liferay.portal.kernel.util.OrderByComparator;
import com.liferay.portal.model.PersistedModel;
import com.liferay.portal.service.BaseLocalServiceImpl;
import com.liferay.portal.service.PersistedModelLocalServiceRegistryUtil;
import com.liferay.portal.service.persistence.UserPersistence;

import ec.gob.snap.vuv.model.Centro;
import ec.gob.snap.vuv.service.CentroLocalService;
import ec.gob.snap.vuv.service.persistence.Act_InstitucionalPersistence;
import ec.gob.snap.vuv.service.persistence.CasoPersistence;
import ec.gob.snap.vuv.service.persistence.CentroPersistence;
import ec.gob.snap.vuv.service.persistence.IndicadorPersistence;
import ec.gob.snap.vuv.service.persistence.InstitucionPersistence;
import ec.gob.snap.vuv.service.persistence.PasoPersistence;
import ec.gob.snap.vuv.service.persistence.RequisitoPersistence;
import ec.gob.snap.vuv.service.persistence.ServicioPersistence;

import java.io.Serializable;

import java.util.List;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the centro local service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link ec.gob.snap.vuv.service.impl.CentroLocalServiceImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see ec.gob.snap.vuv.service.impl.CentroLocalServiceImpl
 * @see ec.gob.snap.vuv.service.CentroLocalServiceUtil
 * @generated
 */
public abstract class CentroLocalServiceBaseImpl extends BaseLocalServiceImpl
    implements CentroLocalService, IdentifiableBean {
    @BeanReference(type = ec.gob.snap.vuv.service.Act_InstitucionalLocalService.class)
    protected ec.gob.snap.vuv.service.Act_InstitucionalLocalService act_InstitucionalLocalService;
    @BeanReference(type = Act_InstitucionalPersistence.class)
    protected Act_InstitucionalPersistence act_InstitucionalPersistence;
    @BeanReference(type = ec.gob.snap.vuv.service.CasoLocalService.class)
    protected ec.gob.snap.vuv.service.CasoLocalService casoLocalService;
    @BeanReference(type = CasoPersistence.class)
    protected CasoPersistence casoPersistence;
    @BeanReference(type = ec.gob.snap.vuv.service.CentroLocalService.class)
    protected ec.gob.snap.vuv.service.CentroLocalService centroLocalService;
    @BeanReference(type = CentroPersistence.class)
    protected CentroPersistence centroPersistence;
    @BeanReference(type = ec.gob.snap.vuv.service.IndicadorLocalService.class)
    protected ec.gob.snap.vuv.service.IndicadorLocalService indicadorLocalService;
    @BeanReference(type = IndicadorPersistence.class)
    protected IndicadorPersistence indicadorPersistence;
    @BeanReference(type = ec.gob.snap.vuv.service.InstitucionLocalService.class)
    protected ec.gob.snap.vuv.service.InstitucionLocalService institucionLocalService;
    @BeanReference(type = InstitucionPersistence.class)
    protected InstitucionPersistence institucionPersistence;
    @BeanReference(type = ec.gob.snap.vuv.service.PasoLocalService.class)
    protected ec.gob.snap.vuv.service.PasoLocalService pasoLocalService;
    @BeanReference(type = PasoPersistence.class)
    protected PasoPersistence pasoPersistence;
    @BeanReference(type = ec.gob.snap.vuv.service.RequisitoLocalService.class)
    protected ec.gob.snap.vuv.service.RequisitoLocalService requisitoLocalService;
    @BeanReference(type = RequisitoPersistence.class)
    protected RequisitoPersistence requisitoPersistence;
    @BeanReference(type = ec.gob.snap.vuv.service.ServicioLocalService.class)
    protected ec.gob.snap.vuv.service.ServicioLocalService servicioLocalService;
    @BeanReference(type = ServicioPersistence.class)
    protected ServicioPersistence servicioPersistence;
    @BeanReference(type = com.liferay.counter.service.CounterLocalService.class)
    protected com.liferay.counter.service.CounterLocalService counterLocalService;
    @BeanReference(type = com.liferay.portal.service.ResourceLocalService.class)
    protected com.liferay.portal.service.ResourceLocalService resourceLocalService;
    @BeanReference(type = com.liferay.portal.service.UserLocalService.class)
    protected com.liferay.portal.service.UserLocalService userLocalService;
    @BeanReference(type = com.liferay.portal.service.UserService.class)
    protected com.liferay.portal.service.UserService userService;
    @BeanReference(type = UserPersistence.class)
    protected UserPersistence userPersistence;
    private String _beanIdentifier;
    private ClassLoader _classLoader;
    private CentroLocalServiceClpInvoker _clpInvoker = new CentroLocalServiceClpInvoker();

    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. Always use {@link ec.gob.snap.vuv.service.CentroLocalServiceUtil} to access the centro local service.
     */

    /**
     * Adds the centro to the database. Also notifies the appropriate model listeners.
     *
     * @param centro the centro
     * @return the centro that was added
     * @throws SystemException if a system exception occurred
     */
    @Indexable(type = IndexableType.REINDEX)
    @Override
    public Centro addCentro(Centro centro) throws SystemException {
        centro.setNew(true);

        return centroPersistence.update(centro);
    }

    /**
     * Creates a new centro with the primary key. Does not add the centro to the database.
     *
     * @param id_centro the primary key for the new centro
     * @return the new centro
     */
    @Override
    public Centro createCentro(long id_centro) {
        return centroPersistence.create(id_centro);
    }

    /**
     * Deletes the centro with the primary key from the database. Also notifies the appropriate model listeners.
     *
     * @param id_centro the primary key of the centro
     * @return the centro that was removed
     * @throws PortalException if a centro with the primary key could not be found
     * @throws SystemException if a system exception occurred
     */
    @Indexable(type = IndexableType.DELETE)
    @Override
    public Centro deleteCentro(long id_centro)
        throws PortalException, SystemException {
        return centroPersistence.remove(id_centro);
    }

    /**
     * Deletes the centro from the database. Also notifies the appropriate model listeners.
     *
     * @param centro the centro
     * @return the centro that was removed
     * @throws SystemException if a system exception occurred
     */
    @Indexable(type = IndexableType.DELETE)
    @Override
    public Centro deleteCentro(Centro centro) throws SystemException {
        return centroPersistence.remove(centro);
    }

    @Override
    public DynamicQuery dynamicQuery() {
        Class<?> clazz = getClass();

        return DynamicQueryFactoryUtil.forClass(Centro.class,
            clazz.getClassLoader());
    }

    /**
     * Performs a dynamic query on the database and returns the matching rows.
     *
     * @param dynamicQuery the dynamic query
     * @return the matching rows
     * @throws SystemException if a system exception occurred
     */
    @Override
    @SuppressWarnings("rawtypes")
    public List dynamicQuery(DynamicQuery dynamicQuery)
        throws SystemException {
        return centroPersistence.findWithDynamicQuery(dynamicQuery);
    }

    /**
     * Performs a dynamic query on the database and returns a range of the matching rows.
     *
     * <p>
     * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link ec.gob.snap.vuv.model.impl.CentroModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
     * </p>
     *
     * @param dynamicQuery the dynamic query
     * @param start the lower bound of the range of model instances
     * @param end the upper bound of the range of model instances (not inclusive)
     * @return the range of matching rows
     * @throws SystemException if a system exception occurred
     */
    @Override
    @SuppressWarnings("rawtypes")
    public List dynamicQuery(DynamicQuery dynamicQuery, int start, int end)
        throws SystemException {
        return centroPersistence.findWithDynamicQuery(dynamicQuery, start, end);
    }

    /**
     * Performs a dynamic query on the database and returns an ordered range of the matching rows.
     *
     * <p>
     * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link ec.gob.snap.vuv.model.impl.CentroModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
     * </p>
     *
     * @param dynamicQuery the dynamic query
     * @param start the lower bound of the range of model instances
     * @param end the upper bound of the range of model instances (not inclusive)
     * @param orderByComparator the comparator to order the results by (optionally <code>null</code>)
     * @return the ordered range of matching rows
     * @throws SystemException if a system exception occurred
     */
    @Override
    @SuppressWarnings("rawtypes")
    public List dynamicQuery(DynamicQuery dynamicQuery, int start, int end,
        OrderByComparator orderByComparator) throws SystemException {
        return centroPersistence.findWithDynamicQuery(dynamicQuery, start, end,
            orderByComparator);
    }

    /**
     * Returns the number of rows that match the dynamic query.
     *
     * @param dynamicQuery the dynamic query
     * @return the number of rows that match the dynamic query
     * @throws SystemException if a system exception occurred
     */
    @Override
    public long dynamicQueryCount(DynamicQuery dynamicQuery)
        throws SystemException {
        return centroPersistence.countWithDynamicQuery(dynamicQuery);
    }

    /**
     * Returns the number of rows that match the dynamic query.
     *
     * @param dynamicQuery the dynamic query
     * @param projection the projection to apply to the query
     * @return the number of rows that match the dynamic query
     * @throws SystemException if a system exception occurred
     */
    @Override
    public long dynamicQueryCount(DynamicQuery dynamicQuery,
        Projection projection) throws SystemException {
        return centroPersistence.countWithDynamicQuery(dynamicQuery, projection);
    }

    @Override
    public Centro fetchCentro(long id_centro) throws SystemException {
        return centroPersistence.fetchByPrimaryKey(id_centro);
    }

    /**
     * Returns the centro with the primary key.
     *
     * @param id_centro the primary key of the centro
     * @return the centro
     * @throws PortalException if a centro with the primary key could not be found
     * @throws SystemException if a system exception occurred
     */
    @Override
    public Centro getCentro(long id_centro)
        throws PortalException, SystemException {
        return centroPersistence.findByPrimaryKey(id_centro);
    }

    @Override
    public PersistedModel getPersistedModel(Serializable primaryKeyObj)
        throws PortalException, SystemException {
        return centroPersistence.findByPrimaryKey(primaryKeyObj);
    }

    /**
     * Returns a range of all the centros.
     *
     * <p>
     * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link ec.gob.snap.vuv.model.impl.CentroModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
     * </p>
     *
     * @param start the lower bound of the range of centros
     * @param end the upper bound of the range of centros (not inclusive)
     * @return the range of centros
     * @throws SystemException if a system exception occurred
     */
    @Override
    public List<Centro> getCentros(int start, int end)
        throws SystemException {
        return centroPersistence.findAll(start, end);
    }

    /**
     * Returns the number of centros.
     *
     * @return the number of centros
     * @throws SystemException if a system exception occurred
     */
    @Override
    public int getCentrosCount() throws SystemException {
        return centroPersistence.countAll();
    }

    /**
     * Updates the centro in the database or adds it if it does not yet exist. Also notifies the appropriate model listeners.
     *
     * @param centro the centro
     * @return the centro that was updated
     * @throws SystemException if a system exception occurred
     */
    @Indexable(type = IndexableType.REINDEX)
    @Override
    public Centro updateCentro(Centro centro) throws SystemException {
        return centroPersistence.update(centro);
    }

    /**
     * Returns the act_ institucional local service.
     *
     * @return the act_ institucional local service
     */
    public ec.gob.snap.vuv.service.Act_InstitucionalLocalService getAct_InstitucionalLocalService() {
        return act_InstitucionalLocalService;
    }

    /**
     * Sets the act_ institucional local service.
     *
     * @param act_InstitucionalLocalService the act_ institucional local service
     */
    public void setAct_InstitucionalLocalService(
        ec.gob.snap.vuv.service.Act_InstitucionalLocalService act_InstitucionalLocalService) {
        this.act_InstitucionalLocalService = act_InstitucionalLocalService;
    }

    /**
     * Returns the act_ institucional persistence.
     *
     * @return the act_ institucional persistence
     */
    public Act_InstitucionalPersistence getAct_InstitucionalPersistence() {
        return act_InstitucionalPersistence;
    }

    /**
     * Sets the act_ institucional persistence.
     *
     * @param act_InstitucionalPersistence the act_ institucional persistence
     */
    public void setAct_InstitucionalPersistence(
        Act_InstitucionalPersistence act_InstitucionalPersistence) {
        this.act_InstitucionalPersistence = act_InstitucionalPersistence;
    }

    /**
     * Returns the caso local service.
     *
     * @return the caso local service
     */
    public ec.gob.snap.vuv.service.CasoLocalService getCasoLocalService() {
        return casoLocalService;
    }

    /**
     * Sets the caso local service.
     *
     * @param casoLocalService the caso local service
     */
    public void setCasoLocalService(
        ec.gob.snap.vuv.service.CasoLocalService casoLocalService) {
        this.casoLocalService = casoLocalService;
    }

    /**
     * Returns the caso persistence.
     *
     * @return the caso persistence
     */
    public CasoPersistence getCasoPersistence() {
        return casoPersistence;
    }

    /**
     * Sets the caso persistence.
     *
     * @param casoPersistence the caso persistence
     */
    public void setCasoPersistence(CasoPersistence casoPersistence) {
        this.casoPersistence = casoPersistence;
    }

    /**
     * Returns the centro local service.
     *
     * @return the centro local service
     */
    public ec.gob.snap.vuv.service.CentroLocalService getCentroLocalService() {
        return centroLocalService;
    }

    /**
     * Sets the centro local service.
     *
     * @param centroLocalService the centro local service
     */
    public void setCentroLocalService(
        ec.gob.snap.vuv.service.CentroLocalService centroLocalService) {
        this.centroLocalService = centroLocalService;
    }

    /**
     * Returns the centro persistence.
     *
     * @return the centro persistence
     */
    public CentroPersistence getCentroPersistence() {
        return centroPersistence;
    }

    /**
     * Sets the centro persistence.
     *
     * @param centroPersistence the centro persistence
     */
    public void setCentroPersistence(CentroPersistence centroPersistence) {
        this.centroPersistence = centroPersistence;
    }

    /**
     * Returns the indicador local service.
     *
     * @return the indicador local service
     */
    public ec.gob.snap.vuv.service.IndicadorLocalService getIndicadorLocalService() {
        return indicadorLocalService;
    }

    /**
     * Sets the indicador local service.
     *
     * @param indicadorLocalService the indicador local service
     */
    public void setIndicadorLocalService(
        ec.gob.snap.vuv.service.IndicadorLocalService indicadorLocalService) {
        this.indicadorLocalService = indicadorLocalService;
    }

    /**
     * Returns the indicador persistence.
     *
     * @return the indicador persistence
     */
    public IndicadorPersistence getIndicadorPersistence() {
        return indicadorPersistence;
    }

    /**
     * Sets the indicador persistence.
     *
     * @param indicadorPersistence the indicador persistence
     */
    public void setIndicadorPersistence(
        IndicadorPersistence indicadorPersistence) {
        this.indicadorPersistence = indicadorPersistence;
    }

    /**
     * Returns the institucion local service.
     *
     * @return the institucion local service
     */
    public ec.gob.snap.vuv.service.InstitucionLocalService getInstitucionLocalService() {
        return institucionLocalService;
    }

    /**
     * Sets the institucion local service.
     *
     * @param institucionLocalService the institucion local service
     */
    public void setInstitucionLocalService(
        ec.gob.snap.vuv.service.InstitucionLocalService institucionLocalService) {
        this.institucionLocalService = institucionLocalService;
    }

    /**
     * Returns the institucion persistence.
     *
     * @return the institucion persistence
     */
    public InstitucionPersistence getInstitucionPersistence() {
        return institucionPersistence;
    }

    /**
     * Sets the institucion persistence.
     *
     * @param institucionPersistence the institucion persistence
     */
    public void setInstitucionPersistence(
        InstitucionPersistence institucionPersistence) {
        this.institucionPersistence = institucionPersistence;
    }

    /**
     * Returns the paso local service.
     *
     * @return the paso local service
     */
    public ec.gob.snap.vuv.service.PasoLocalService getPasoLocalService() {
        return pasoLocalService;
    }

    /**
     * Sets the paso local service.
     *
     * @param pasoLocalService the paso local service
     */
    public void setPasoLocalService(
        ec.gob.snap.vuv.service.PasoLocalService pasoLocalService) {
        this.pasoLocalService = pasoLocalService;
    }

    /**
     * Returns the paso persistence.
     *
     * @return the paso persistence
     */
    public PasoPersistence getPasoPersistence() {
        return pasoPersistence;
    }

    /**
     * Sets the paso persistence.
     *
     * @param pasoPersistence the paso persistence
     */
    public void setPasoPersistence(PasoPersistence pasoPersistence) {
        this.pasoPersistence = pasoPersistence;
    }

    /**
     * Returns the requisito local service.
     *
     * @return the requisito local service
     */
    public ec.gob.snap.vuv.service.RequisitoLocalService getRequisitoLocalService() {
        return requisitoLocalService;
    }

    /**
     * Sets the requisito local service.
     *
     * @param requisitoLocalService the requisito local service
     */
    public void setRequisitoLocalService(
        ec.gob.snap.vuv.service.RequisitoLocalService requisitoLocalService) {
        this.requisitoLocalService = requisitoLocalService;
    }

    /**
     * Returns the requisito persistence.
     *
     * @return the requisito persistence
     */
    public RequisitoPersistence getRequisitoPersistence() {
        return requisitoPersistence;
    }

    /**
     * Sets the requisito persistence.
     *
     * @param requisitoPersistence the requisito persistence
     */
    public void setRequisitoPersistence(
        RequisitoPersistence requisitoPersistence) {
        this.requisitoPersistence = requisitoPersistence;
    }

    /**
     * Returns the servicio local service.
     *
     * @return the servicio local service
     */
    public ec.gob.snap.vuv.service.ServicioLocalService getServicioLocalService() {
        return servicioLocalService;
    }

    /**
     * Sets the servicio local service.
     *
     * @param servicioLocalService the servicio local service
     */
    public void setServicioLocalService(
        ec.gob.snap.vuv.service.ServicioLocalService servicioLocalService) {
        this.servicioLocalService = servicioLocalService;
    }

    /**
     * Returns the servicio persistence.
     *
     * @return the servicio persistence
     */
    public ServicioPersistence getServicioPersistence() {
        return servicioPersistence;
    }

    /**
     * Sets the servicio persistence.
     *
     * @param servicioPersistence the servicio persistence
     */
    public void setServicioPersistence(ServicioPersistence servicioPersistence) {
        this.servicioPersistence = servicioPersistence;
    }

    /**
     * Returns the counter local service.
     *
     * @return the counter local service
     */
    public com.liferay.counter.service.CounterLocalService getCounterLocalService() {
        return counterLocalService;
    }

    /**
     * Sets the counter local service.
     *
     * @param counterLocalService the counter local service
     */
    public void setCounterLocalService(
        com.liferay.counter.service.CounterLocalService counterLocalService) {
        this.counterLocalService = counterLocalService;
    }

    /**
     * Returns the resource local service.
     *
     * @return the resource local service
     */
    public com.liferay.portal.service.ResourceLocalService getResourceLocalService() {
        return resourceLocalService;
    }

    /**
     * Sets the resource local service.
     *
     * @param resourceLocalService the resource local service
     */
    public void setResourceLocalService(
        com.liferay.portal.service.ResourceLocalService resourceLocalService) {
        this.resourceLocalService = resourceLocalService;
    }

    /**
     * Returns the user local service.
     *
     * @return the user local service
     */
    public com.liferay.portal.service.UserLocalService getUserLocalService() {
        return userLocalService;
    }

    /**
     * Sets the user local service.
     *
     * @param userLocalService the user local service
     */
    public void setUserLocalService(
        com.liferay.portal.service.UserLocalService userLocalService) {
        this.userLocalService = userLocalService;
    }

    /**
     * Returns the user remote service.
     *
     * @return the user remote service
     */
    public com.liferay.portal.service.UserService getUserService() {
        return userService;
    }

    /**
     * Sets the user remote service.
     *
     * @param userService the user remote service
     */
    public void setUserService(
        com.liferay.portal.service.UserService userService) {
        this.userService = userService;
    }

    /**
     * Returns the user persistence.
     *
     * @return the user persistence
     */
    public UserPersistence getUserPersistence() {
        return userPersistence;
    }

    /**
     * Sets the user persistence.
     *
     * @param userPersistence the user persistence
     */
    public void setUserPersistence(UserPersistence userPersistence) {
        this.userPersistence = userPersistence;
    }

    public void afterPropertiesSet() {
        Class<?> clazz = getClass();

        _classLoader = clazz.getClassLoader();

        PersistedModelLocalServiceRegistryUtil.register("ec.gob.snap.vuv.model.Centro",
            centroLocalService);
    }

    public void destroy() {
        PersistedModelLocalServiceRegistryUtil.unregister(
            "ec.gob.snap.vuv.model.Centro");
    }

    /**
     * Returns the Spring bean ID for this bean.
     *
     * @return the Spring bean ID for this bean
     */
    @Override
    public String getBeanIdentifier() {
        return _beanIdentifier;
    }

    /**
     * Sets the Spring bean ID for this bean.
     *
     * @param beanIdentifier the Spring bean ID for this bean
     */
    @Override
    public void setBeanIdentifier(String beanIdentifier) {
        _beanIdentifier = beanIdentifier;
    }

    @Override
    public Object invokeMethod(String name, String[] parameterTypes,
        Object[] arguments) throws Throwable {
        Thread currentThread = Thread.currentThread();

        ClassLoader contextClassLoader = currentThread.getContextClassLoader();

        if (contextClassLoader != _classLoader) {
            currentThread.setContextClassLoader(_classLoader);
        }

        try {
            return _clpInvoker.invokeMethod(name, parameterTypes, arguments);
        } finally {
            if (contextClassLoader != _classLoader) {
                currentThread.setContextClassLoader(contextClassLoader);
            }
        }
    }

    protected Class<?> getModelClass() {
        return Centro.class;
    }

    protected String getModelClassName() {
        return Centro.class.getName();
    }

    /**
     * Performs an SQL query.
     *
     * @param sql the sql query
     */
    protected void runSQL(String sql) throws SystemException {
        try {
            DataSource dataSource = centroPersistence.getDataSource();

            SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
                    sql, new int[0]);

            sqlUpdate.update();
        } catch (Exception e) {
            throw new SystemException(e);
        }
    }
}
